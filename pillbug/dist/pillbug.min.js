const c=console;class NodeWrapper{constructor(e){this.el=document.createElement(e)}atts(e){for(let t in e)this.el.setAttribute(t,e[t]);return this}clear(){return this.el.innerHTML="",this}on(e){for(let t in e)this.el.addEventListener(t,e[t]);return this}inner(e){this.el.innerHTML="",Array.isArray(e)||(e=[e]);let t=document.createDocumentFragment();return e.forEach(e=>{e instanceof NodeWrapper||e instanceof View?t.appendChild(e.el):e instanceof Node?t.appendChild(e):t.appendChild(document.createTextNode(e.toString()))}),this.el.appendChild(t),this}text(e){return this.el.textContent=e,this}}const h=function(e){return new NodeWrapper(e)};class View{constructor(e,t,r){this.draw(e,this,h,t,r)}update(e,t,r,i){}root(e){if(e instanceof NodeWrapper||e instanceof View)this.el=e.el;else{if(!(e instanceof Node))throw new TypeError("View.root() only accepts types: NodeWrapper, View, Node");this.el=e}}}class App{constructor(){this._register={}}action(){}_getWatchList(e){let t=this._register[e];return void 0==t&&(t=[],this._register[e]=t),t}emit(e,t){this._getWatchList(e).forEach(e=>e(t))}on(e,t){this._getWatchList(e).push(t)}}const pillbug={};pillbug.App=App,pillbug.View=View,pillbug.NodeWrapper=NodeWrapper,pillbug.version="0.0.1",module.exports=pillbug;