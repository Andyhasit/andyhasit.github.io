c=console;var h=mop.html;class TodoList extends mop.Box{render(){var e=this._data.map(e=>this._(TodoItem,e));return h.div({},h.ul({},e))}}class TodoItem extends mop.Box{render(){let e,t=this._data.text;switch(t[0]){case"r":e="red";break;case"b":e="blue";break;case"y":e="yellow";break;case"g":e="green";break;default:e="black"}return h.li({style:`color: ${e}`},t)}}class Page extends mop.Box{constructor(e){super(),this.route=e.route,this.name=e.name}render(){let e=app.currentPage==this.route?Page.attsVisible:Page.attsHidden;return h.div(e,this.name)}}Page.trackBy="route",Page.attsHidden={style:"display: none; padding: 20px"},Page.attsVisible={style:"display: block; padding: 20px"};class HomePage extends Page{constructor(e){super(e),this.text="",this.todos=[]}addToDo(e){this.todos.push({id:this.todos.length+1,text:this.text}),this.text="",this.flush(!0)}renderAddBtn(){return h.button({},"Add",{click:()=>this.addToDo("yo")})}renderInput(){let e=this;return h.input({value:this.text},null,{keyup:function(t){e.setText(t)}})}setText(e){e.preventDefault(),13==e.keyCode?this.addToDo():this.text=e.target.value}render(){let e=app.currentPage==this.route?Page.attsVisible:Page.attsHidden;return h.div(e,[h.h1({},this.name),this.renderInput(),this.renderAddBtn(),this._(TodoList,this.todos)])}}HomePage.trackBy="route";class PageContainer extends mop.Box{push(){this._dirty=!0}render(){var e=app.pages.map(e=>this._(e.cls,e));return h.div({},e)}}class MenuEntry extends mop.Box{constructor(e){super(),this.route=e.route,this.name=e.name}render(){return h.a({href:"#",onclick:"app.showSection('"+this.route+"')"},this.name)}}MenuEntry.trackBy="route";class Menu extends mop.Box{render(){var e=app.pages.map(e=>this._(MenuEntry,e));let t=app.menuOpen?"70%":"0%";return h.div({id:"menu",class:"overlay",style:"width: "+t},[h.a({href:"#",class:"closebtn",onclick:"app.hideMenu()"},"&times;"),h.div({class:"overlay-content"},e)])}}app=new mop.ViewModel({currentPage:"home",pages:[{cls:HomePage,route:"home",name:"Sophie holiday list"},{cls:HomePage,route:"page2",name:"Page2"}]}),app.action("showMenu",function(){this.menuOpen=!0}),app.action("hideMenu",function(){this.menuOpen=!1}),app.action("showSection",function(e){this.currentPage=e,this.menuOpen=!1});class DataStore{constructor(e){this.dbName=e}load(){return this.dbPromise=idb.open(this.dbName,1,e=>{switch(c.log(e.oldVersion),e.oldVersion){case 0:e.createObjectStore("task",{keyPath:"id",autoIncrement:!0}),e.createObjectStore("keyStore",{keyPath:"table"})}})}getAll(e){return this.dbPromise.then(t=>t.transaction(e).objectStore(e).getAll())}get(e,t){return this.dbPromise.then(s=>{const n=s.transaction(e);return n.objectStore(e).get(t),n.complete})}_put(e,t){return this.dbPromise.then(s=>{const n=s.transaction(e,"readwrite");return n.objectStore(e).put(t),n.complete})}_nextId(e){let t="keyStore";return this.get(t,e).then(s=>(c.log(s),void 0==s?this._put(t,{table:e,seed:1}).then(()=>1):(s.seed++,this._put(t,s).then(()=>s.seed))))}new(e,t){return this.dbPromise.then(s=>{const n=s.transaction(e,"readwrite");return n.objectStore(e).add(t),n.complete}).then(t=>(c.log(t),this.getAll(e)))}save(e,t){return this.dbPromise.then(s=>{const n=s.transaction(e,"readwrite");return n.objectStore(e).put(t),n.complete}).then(t=>(c.log(t),this.getAll(e)))}}app.load=function(){this.db=new DataStore("mop-todo-v1"),this.db.load().then(e=>{this.db._nextId("task").then(e=>c.log(e)),this.db._nextId("task").then(e=>c.log(e)),this.db._nextId("task").then(e=>c.log(e)),this.db._nextId("task").then(e=>c.log(e)),this.db.getAll("keyStore").then(e=>c.log(e)),this.db.get("keyStore","task").then(e=>c.log(e)),this.bind(PageContainer,"page-content"),this.bind(Menu,"menu"),this.flush()})};