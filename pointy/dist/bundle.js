(function () {
  'use strict';

  const c=console;class App{constructor(){this._eventWatchers={},this._views={};}view(t,e){let s=new t(this);s.draw(),e&&(this._views[e]=s);}emit(t,e){this._watchers(t).forEach(t=>t(e));}on(t,e){this._watchers(t).push(e);}_watchers(t){let e=this._eventWatchers[t];return null==e&&(e=[],this._eventWatchers[t]=e),e}}class View{constructor(t,e,s){this._app=t,this._props=e,this._key=s,this._vCache={},this._matchers={},this._vals={},this.v=this._view.bind(this);}draw(){this._draw(h,this.v,this._app,this._props,this._key,this);}wrap(t){return this.root=t,this.el=t.el,t}match(t,e){this._matchers.hasOwnProperty(t)||(this._matchers[t]=[]),this._matchers[t].push(e);}update(t){this._update(h,this.v,this._app,t,this._key,this);}_update(t,e,s,r,i,h){for(let t in h._matchers){let e=r[t];h._vals[t]!==e&&h._matchers[t].forEach(t=>{t(e,r);}),h._vals[t]=e;}}_view(t,e,s){let r;if(null==s)(r=new t(this._app,e)).draw();else{let i=t.name;this._vCache.hasOwnProperty(i)||(this._vCache[i]={});let h=this._vCache[i];h.hasOwnProperty(s)?r=h[s]:((r=new t(this._app,e,s)).draw(),h[s]=r);}return r.update(e),r}}class ModalContainer{constructor(t){this._el=h("#"+t);}showModal(t){t.draw(),this._el.inner(t);let e=document.getElementsByClassName("modal-autofocus")[0];return e&&e.focus(),t.promise.then(t=>(this._el.clear(),t)).catch(t=>{throw this._el.clear(),c.log(`Modal rejected (${t}). You can ignore the next error log.`),t})}}class Modal extends View{_draw(t,e,s,r,i,h){h.wrap(h.overlay(t,e,s,r,i,h).on("click",t=>{t.target==h.el&&h.reject("user-cancelled");})),h.promise=new Promise((t,e)=>{h.resolve=t,h.reject=e;}),h.root.inner(h.content(t,e,s,r,i,h));}}function h(t){return new NodeWrapper(t)}class NodeWrapper{constructor(t){t.startsWith("#")?this.el=document.getElementById(t.substr(1)):this.el=document.createElement(t);}atts(t){for(let e in t)this.el.setAttribute(e,t[e]);return this}checked(t){return this.el.checked=t,this}class(t){return this.el.className=t,this}clear(){return this.el.innerHTML="",this}on(t,e){return this.el.addEventListener(t,e),this}id(t){return this.el.id=t,this}inner(t){this.el.innerHTML="",Array.isArray(t)||(t=[t]);let e=document.createDocumentFragment();return t.forEach(t=>{t instanceof NodeWrapper||t instanceof View?e.appendChild(t.el):t instanceof Node?e.appendChild(t):e.appendChild(document.createTextNode(t.toString()));}),this.el.appendChild(e),this}html(t){return this.el.innerHTML=t,this}text(t){return this.el.textContent=t,this}}class Router{constructor(t,e,s){this._app=t,this.pageContainer=new PageContainer(this._app,e),this.routes=s.map(t=>new Route(...t)),window.addEventListener("hashchange",t=>this._hashChanged()),window.addEventListener("load",t=>this._hashChanged());}add(t,e,s){this.routes.push(new Route(t,e,keyFn));}_hashChanged(t){let e=location.hash.slice(1)||"/",s=this._getRoute(e);if(!s)throw new Error("Route not matched: "+e);this.pageContainer.goto(s);}_goto(t){}_getRoute(t){let e=this.routes.length;for(let s=0;s<e;s++){let e=this.routes[s];if(e.matches(t))return e}}}class PageContainer extends View{constructor(t,e){super(t),this.wrap(h("#"+e));}goto(t){this.root.inner(this._view(t.cls,t.props,t.keyFn(t.props)));}}class Route{constructor(t,e,s){let r;this.cls=e,this.keyFn=s||function(){return 1},[t,r]=t.split("?"),this.pattern=t,this.chunks=t.split("/").map(t=>t.startsWith("{")?new RouteArg(t.slice(1,-1)):t),this.params={},r&&r.split(",").forEach(t=>{let e=new RouteArg(t.trim());this.params[e.name]=e;});}matches(t){let e,s,r;[e,s]=t.split("?"),r=e.split("/");let i,h,n={},a=0,o=this.chunks.length,c=!1;if(o==r.length){for(;;){if(i=this.chunks[a],h=r[a],i instanceof RouteArg)n[i.name]=i.convert(h);else if(i!==h){c=!0;break}if(++a>o)break}if(!c)return s&&s.split("&").forEach(t=>{let e,s;[e,s]=t.split("="),this.params.hasOwnProperty(e)&&(n[e]=this.params[e].convert(s));}),this.props=n,!0}return !1}}class RouteArg{constructor(t){let e,s;switch([e,s]=t.split(":"),this.name=e,s){case"int":this.conv=(t=>parseInt(t));break;case"float":this.conv=(t=>parseFloat(t));break;default:this.conv=(t=>t);}}convert(t){return this.conv(t)}}

  function download(filename, text) {
    var element = document.createElement('a');
    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
    element.setAttribute('download', filename);

    element.style.display = 'none';
    document.body.appendChild(element);

    element.click();

    document.body.removeChild(element);
  }


  class Menu extends View {
    _draw(h$$1,v,a,p,k,s) {
      let showMenuBtn = h$$1('span').html('&#9776;').class('menu-button').on('click', e => s.showMenu());
      let hideMenuBtn = h$$1('a').atts({href:"#"}).html('&times;').class('closebtn').on('click', e => s.hideMenu());
      s.menuDiv = h$$1('div').id('menu').class('overlay').inner([
        hideMenuBtn,
        h$$1('div').class('overlay-content').inner([
          s.getMenuEntry(a, h$$1, 'Home', ''),
          s.getMenuEntry(a, h$$1, 'Stuff', 'page2'),
          s.downloadButton(h$$1,v,a,p,k,s)
          ])
        ]);
      s.wrap(h$$1('#menu-container')).inner([
        s.menuDiv, 
        showMenuBtn
        ]);
    }
    downloadButton(h$$1,v,a,p,k,s) {
      return h$$1('a').atts({href:"#"}).text('Download').on('click', e => {
        a.db.dump().then(data => {
          download('pointydb.json', JSON.stringify(data));
          this.hideMenu();
        });
      })
    }
    getMenuEntry(a, h$$1, text, route) {
      return h$$1('a').atts({href:"#" + route}).text(text).on('click', e => {
        this.hideMenu();
        //a.goto(route)
      })
    }
    showMenu() {
      this.menuDiv.atts({style: 'width: 70%'});
    }
    hideMenu() {
      this.menuDiv.atts({style: 'width: 0'});
    }
  }

  const c$1=console;class Database{constructor(e,t){if(t instanceof Schema)this.schema=t;else{let e=new Schema;e.addVersion(t),this.schema=e;}this._caches={},this._fullyLoaded={},this._dbp=new Promise((t,r)=>{let s=indexedDB.open(e,this.schema.getVersion());s.onerror=(()=>{console.log(s.error),r(s.error);}),s.onsuccess=(()=>{this.schema.createFunctions(this),t(s.result);}),s.onupgradeneeded=(e=>{this.schema.upgrade(s.result,e.oldVersion);});});}ready(){return this._dbp}clear(){let e=[];return this._dbp.then(t=>{let r=t.objectStoreNames,s=t.objectStoreNames.length;for(let t=0;t<s;t++){let s=r[t];e.push(this._wrap(s,"clear","readwrite").then(()=>this._caches[s]={}));}return Promise.all(e)})}dump(){let e={},t=[];return this._dbp.then(r=>{let s=r.objectStoreNames,i=r.objectStoreNames.length;for(let r=0;r<i;r++){let i=s[r];t.push(this.getAll(i).then(t=>e[i]=t));}return Promise.all(t).then(t=>e)})}_cacheOf(e){return this._caches.hasOwnProperty(e)||(this._caches[e]={}),this._caches[e]}_wrap(e,t,r,...s){return this._dbp.then(i=>new Promise((n,a)=>{let h=i.transaction(e,r),o=h.objectStore(e)[t](...s);h.oncomplete=(()=>n(o.result)),h.onabort=h.onerror=(()=>a(h.error));}))}put(e,t){return this._wrap(e,"put","readwrite",t).then(r=>(t.id=r,this._cacheOf(e)[r]=t,t))}del(e,t){return this._wrap(e,"delete","readwrite",t.id).then(r=>(delete this._cacheOf(e)[t.id],!0))}get(e,t){let r=this._cacheOf(e)[t];return null==r?this._wrap(e,"get",void 0,t).then(r=>(this._cacheOf(e)[t]=r,r)):Promise.resolve(r)}getAll(e){return this._fullyLoaded[e]?Promise.resolve(Object.values(this._cacheOf(e))):this._wrap(e,"getAll").then(t=>{let r=this._cacheOf(e);return this._fullyLoaded[e]=!0,t.map(e=>r[e.id]=e),t})}_criteriaMatch(e,t){for(let r in t)if(e[r]!==t[r])return !1;return !0}_fetchOne(e,t){return this._dbp.then(r=>new Promise((s,i)=>{let n=[],a=r.transaction(e).objectStore(e).openCursor();a.onerror=(e=>c$1.log(e)),a.onsuccess=(e=>{var r=e.target.result;if(r){let e=r.value;this._criteriaMatch(e,t)?n.push(e):r.continue();}else s(n);});}))}filter(e,t){return this._dbp.then(r=>new Promise((s,i)=>{let n=[],a=r.transaction(e).objectStore(e).openCursor();a.onerror=(e=>i(a.error)),a.onsuccess=(e=>{var r=e.target.result;if(r){let e=r.value;this._criteriaMatch(e,t)&&n.push(e),r.continue();}else s(n);});}))}getParent(e,t,r){let s=r[this.schema.getFkName(t)];return null==s?Promise.resolve(void 0):this.get(t,s)}_filterOnIndex(e,t,r){return this._dbp.then(s=>new Promise((i,n)=>{let a=[],h=s.transaction(e);console.log(t);let o=h.objectStore(e).index(t),c=IDBKeyRange.only(r);o.openCursor(c).onsuccess=(e=>{let t=e.target.result;if(t){let e=t.value;a.push(e),t.continue();}else i(a);});}))}getChildren(e,t,r){return this._filterOnIndex(t,e,r.id)}getLinked(e,t,r){return this._dbp.then(s=>new Promise((i,n)=>{let a=[],h=s.transaction(e).objectStore(e).index(t),o=IDBKeyRange.only(r.id);h.openCursor(o).onsuccess=(e=>{let t=e.target.result;if(t){let e=t.value;a.push(e),t.continue();}else i(a);});}))}setParent(e,t,r,s){return r[this.schema.getFkName(t)]=s.id,this.put(e,r)}link(e,t,r,s){let i=this.schema.getLinkStoreName(e,t),n={};return n[this.schema.getFkName(e)]=r.id,n[this.schema.getFkName(t)]=s.id,this.put(i,n)}}class Schema{constructor(e={keyPath:"id",autoIncrement:!0}){this.defaultConf=e,this._versions=[];}addVersion(e){this._versions.push(e);}getVersion(){return this._versions.length+1}upgrade(e,t){let r=new SchemaUpgrader(this,e,this.defaultConf);this._versions.forEach((e,s)=>{s>=t&&e(r,!0);});}createFunctions(e){let t=new SchemaFunctionBuilder(this,e);this._versions.forEach((e,r)=>{e(t,!1);});}getFkName(e){return `__${e}Id`}getLinkStoreName(e,t){return `m2m__${e}__${t}`}}class SchemaFunctionBuilder{constructor(e,t){this.schema=e,this.target=t;}capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}addStore(e){let t=this.capitalize(e),r=t+"s";this.target["put"+t]=function(t){return this.put(e,t)},this.target["del"+t]=function(t){return this.del(e,t)},this.target["get"+t]=function(t){return this.get(e,t)},this.target["getAll"+r]=function(t){return this.getAll(e,t)};}oneToMany(e,t){let r=this.capitalize(e),s=this.capitalize(t),i=s+"s";this.target["get"+s+r]=function(r){return this.getParent(t,e,r)},this.target["get"+r+i]=function(r){return this.getChildren(e,t,r)},this.target["set"+s+r]=function(r,s){return this.setParent(t,e,r,s)};}manyToMany(e,t){this.target;let r=this.schema.getLinkStoreName(e,t),s=this.capitalize(e),i=this.capitalize(t),n=s+"s",a=i+"s";this.target["get"+s+a]=function(e){return this.getChildren(t,r,e)},this.target["get"+i+n]=function(e){},this.target["link"+s+i]=function(r,s){return this.link(e,t,r,s)},this.target["link"+i+s]=function(r,s){return this.link(e,t,s,r)},this.target["unlink"+s+i]=function(e,t){},this.target["unlink"+i+s]=function(e,t){};}}class SchemaUpgrader{constructor(e,t,r){this.schema=e,this.idb=t,this.stores={},this.defaultConf=r;}addStore(e,t=this.defaultConf){let r=this.idb.createObjectStore(e,t);return this.stores[e]=r,r}oneToMany(e,t){c$1.log(e),c$1.log(t),c$1.log(this.schema.getFkName(e)),this.stores[t].createIndex(e,this.schema.getFkName(e));}manyToMany(e,t){let r=this.idb.createObjectStore(this.schema.getLinkStoreName(e,t),this.defaultConf);r.createIndex(e,this.schema.getFkName(e)),r.createIndex(t,this.schema.getFkName(t));}}

  /*

  Day:
    date: YYYYMMDD

  Description:
    name

  Entry
    _day
    _description
    points
    comment

  */

  const schema = new Schema();

  schema.addVersion((schema, isUpgrade) => {
    let target = schema.addStore('target');
    let record = schema.addStore('record');
    let category = schema.addStore('category');

    /*
    let tags = schema.addStore('description')
    schema.oneToMany('day', 'entry')
    schema.oneToMany('description', 'entry')
    schema.manyToMany('tag', 'task')
    if (isUpgrade) {
      days.put({day: 'mon'})
    }
    */
  });

  const db = new Database('pointy-v2', schema);

  /*
  var someDate = new Date();
  var numberOfDaysToAdd = 6;
  someDate.setDate(someDate.getDate() + numberOfDaysToAdd); 
  Formatting to dd/mm/yyyy :

  var dd = someDate.getDate();
  var mm = someDate.getMonth() + 1;
  var y = someDate.getFullYear();

  var someFormattedDate = dd + '/'+ mm + '/'+ y;


      let today = new Date()
      new Date(today.getFullYear(), 1, 22);

  function getDateSpread() {
    return [
      {text: 'Sat', date: ''},
      {text: 'Sun', date: ''},
    ]
  }

  input type=range provides a visual UI slider to input a number. The UI for this control is browser-dependent.

  input type=color

  <input list="pasta" autocomplete=off>

  <datalist id="pasta">
  <option>Bavette</option>
  <option>Cannelloni</option>
  <option>Fiorentine</option>
  <option>Gnocchi</option>
  <option>Pappardelle</option>
  <option>Penne lisce</option>
  <option>Pici</option>
  <option>Rigatoni</option>
  <option>Spaghetti</option>
  <option>Tagliatelle</option>
  </datalist>
  */

  class AddTargetModal extends Modal {
    overlay(h$$1,v,a,p,k,s) {
      return h$$1('div').class('modal-background')
    }
    content(h$$1,v,a,p,k,s) {
      let text = '';
      let textInput = h$$1('input')
        .class('modal-input modal-autofocus')
        .atts({list: 'suggestions'})
        .on('change', e => {text = e.target.value;})
        .on('keyup', e => {
          if (e.keyCode == 13) {
            s.resolve({text: text});
          }
        });
      /*
      let dateBtnsDiv = h('div').class('button-row').inner(
        getDateSpread(5).map(datePair => {
          return h('button').text(datePair.text).on('click', e => {
            //e.target. set class on all
          })
          })
        )
      */
      let dataList = h$$1('datalist').id('suggestions').inner(
        ['a', 'black', 'bling', 'car'].map(o => h$$1('option').inner(o))
      );
      return h$$1('div').class('modal-content modal-animate').inner([
        h$$1('div').inner([
          textInput,
          dataList,
          h$$1('input').class('modal-input').atts({type:'range', min:0, max:100, value:90, step:10}),
          h$$1('input').class('modal-input').atts({type:'datetime-local'})
        ]),
        h$$1('button').text('OK').on('click', e => s.resolve({text: text})),
        h$$1('button').text('Cancel').on('click', e => s.reject('user-cancelled')),
      ])
    }
  }

  class HomePage extends View {
    _draw(h$$1,v,a,p,k,s) {
      s.targetsUL = h$$1('ul');
      s.btnAdd = h$$1('button').text('Add').on('click', e => {
        a.showModal(new AddTargetModal())
          .then(target => {
            a.addTarget(target);
          });
      });
      s.wrap(h$$1('div').inner([
        s.btnAdd,
        s.targetsUL
      ]));
      a.on('refresh', state => s.drawTargetsUl(h$$1,s,state.targets));
    }
    drawTargetsUl(h$$1,s,targets) {
      s.targetsUL.inner(targets.map( target => 
        h$$1('div').inner(target.text)
      ));
    }
  }

  const routes = [
    ['/', HomePage],
    ['todos/{id}?name,age', ''],
  ];

  const app = new App();
  app.db = db;
  app.router = new Router(app, 'page-container', routes);
  app.modalContainer = new ModalContainer('modal-container');
  app.view(Menu);

  app.db.ready().then(() => {  
    app.refresh();
    console.log('ok');
  });

  app.showModal = function(modal) {
    return app.modalContainer.showModal(modal)
  };

  app.goto = function(url) {
    // so far not used as we use hrefs
    //this.emit('goto', page)
    //window.history.pushState({}, window.location + url, window.location.origin + url);
  };

  /*
  Real app functionality:

  For now - play dumb. Every time we save, we reload everything - no in-app caching.

  Only have one event - dataChanged
  */

  app.refresh = function() {
    let state = {};
    this.db.getAll('target').then(targets => {
      state['targets'] = targets;
      this.db.getAll('record').then(records => {
        state['records'] = records;
        this.db.getAll('category').then(categories => {
          state['categories'] = categories;
          this.emit('refresh', state);
        });
      });
    });
  };

  app.addTarget = function(target) {
    this.db.putTarget(target).then(target => {
      this.refresh();
    });
  };

}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,
